#!/usr/bin/env bash
### Usage:
###   workstation-create
###   workstation-create service <service_name> [--running]
### Options:
###   --help
###   --running           state of the container after creation
###   service
###     <service_name>    directory containing orders
###
### Creates a workstation

#--HEAD--
set -o nounset; set -o errexit; set -o pipefail;
SCRIPT="$(test -L "$0" && readlink -e "$0" || readlink -e "$0")"
SCRIPT_NAME="$(basename "${SCRIPT}")"
SCRIPT_DIR="$(dirname "${SCRIPT}")"
source "${SCRIPT_DIR}/main.source"
#--/HEAD--

# TODO: figure out which log file the clone messages should go into
# TODO: lxc-attach failures are not sending out any messages
# TODO: clean up the path mess in here
# TODO: when a build/setup fails, there should be a max retry limit, so we don't endlessly build

source "${SCRIPT_DIR}/lib/workstation.source"

"${SCRIPT_DIR}/container-create"

[[ "${service}" != "true" ]] && exit 0

WORKSTATION_NAME="starphleet-${service_name}"
if container_exists "${WORKSTATION_NAME}"; then
  info "workstation '${WORKSTATION_NAME}' is missing and will now be created..."
  REPO="$(awk '/^autodeploy[ \t]*/ {print $2}' /data/starphleet/headquarters/nodejs-service/orders | tail -1)"

  if [[ ! -d "${STARPHLEET_HQ_ROOT}/${service_name}" ]]; then
    fatal "invalid service name '${service_name}'"
  fi

  #rsync -az --exclude '.git' "${STARPHLEET_HQ_ROOT}/${service_name}/" "${WORKSTATION_SHARE}/app"
  WORKSTATION_BASE="starphleet-workstation"
  WORKSTATION_ROOT="${STARPHLEET_LXC_ROOT}/${WORKSTATION_NAME}"
  WORKSTATION_SHARE="${WORKSTATION_ROOT}/share"

  workstation_open
  cp "${STARPHLEET_ROOT}/setup/workstation-setup.sh" "${WORKSTATION_SHARE}/setup.sh"
  cp "${STARPHLEET_HQ_ROOT}/${service_name}/orders" "${WORKSTATION_SHARE}/"
  # TODO: make this an rsync from local updated git repo (need to figure out how to properly kick this off)
  "${SCRIPT_DIR}/git-clone" "${REPO}" "${WORKSTATION_SHARE}/app" --shallow
  trace "log available at ${WORKSTATION_ROOT}/setup.log"
  lxc-attach --name="${WORKSTATION_NAME}" -- bash -c '/var/starphleet/share/setup.sh' > "${WORKSTATION_ROOT}/setup.log" 2>&1 || true
  if [[ -f "${WORKSTATION_SHARE}/setup.completed" ]]; then
    info "setup completed"
  else
    fatal "setup failed"
  fi
  lxc-attach --name "${WORKSTATION_NAME}" -- sudo -H -u ubuntu -i bash -c "./build.sh" >> "${WORKSTATION_ROOT}/setup.log" 2>&1 || true
  if [[ -f "${WORKSTATION_SHARE}/build.completed" ]]; then
    info "build completed"
  else
    fatal "build failed"
  fi
  if [[ "${running}" != "true" ]]; then
    workstation_close
  fi
fi
info "workstation '${WORKSTATION_NAME}' ready"
