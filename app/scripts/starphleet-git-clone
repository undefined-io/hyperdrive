#!/usr/bin/env bash
### Usage:
###   starphleet-git-clone <remote> <local> [--shallow] [--force]
### Options:
###   --help
###   --shallow   clone will only be one level deep containing specified branch
###   --force     required in order to re-clone over an existing repo
###
### Clone a GIT repo based on the repo#branch syntax for <remote>

#--HEAD--
set -o nounset; set -o errexit
SCRIPT="$(test -L "$0" && readlink "$0" || echo "$0")"
SCRIPT_NAME="$(basename "${SCRIPT}")"
SCRIPT_DIR="$(dirname "${SCRIPT}")"
source "${SCRIPT_DIR}/starphleet-main.source"
#--/HEAD--

if ! parse_git_locator "${remote}"; then exit 255; fi
if [[ "${shallow}" == "true" ]]; then
  DEPTH="--depth 1"
fi

if [[ -L "${local}" || -f "${local}" ]]; then
  fatal "${SCRIPT_NAME}: <local> cannot be a file or symlink or blank"
elif [[ ! -d "${local}" ]]; then
  info "${SCRIPT_NAME}: cloning \"${REMOTE_REPO}#${REMOTE_BRANCH}\" for the first time to \"${local}\""
  git clone --branch "${REMOTE_BRANCH}" ${DEPTH:-} "${REMOTE_REPO}" "${local}"
elif [[ -d "${local}" && ! "${force}" == "true" ]]; then
  fatal "${SCRIPT_NAME}: --force is required in order to overwrite an existing repo"
elif [[ -d "${local}" && "${force}" == "true" ]]; then
  warn "${SCRIPT_NAME}: replacing clone \"${local}\" from \"${REMOTE_REPO}#${REMOTE_BRANCH}\""
  rm -rf "${local}"
  git clone --branch "${REMOTE_BRANCH}" ${DEPTH:-} "${REMOTE_REPO}" "${local}"
fi
