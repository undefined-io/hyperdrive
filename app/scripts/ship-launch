#!/usr/bin/env bash
### Usage:
###   ship-launch <hull_name> 
### Options:
###   --help

#--HEAD--
# TODO: See if this can be added from a template
set -o nounset; set -o errexit; set -o pipefail
SCRIPT="$(test -L "$0" && readlink -e "$0" || readlink -e "$0")"
SCRIPT_NAME="$(basename "${SCRIPT}")"
SCRIPT_DIR="$(dirname "${SCRIPT}")"
source "${SCRIPT_DIR}/main.source"
#--/HEAD--

if hull_exists "${hull_name}"; then

IP_ADDRESS="$(ship_ip "${hull_name}")"
apply_order_exports "${HYPERDRIVE_LXC_ROOT}/${hull_name}/share/orders"

# create the upstream for the ship
trace "creating '${HYPERDRIVE_NGINX}/upstream/${hull_name}.conf'"
cat << EOF > "${HYPERDRIVE_NGINX}/upstream/${hull_name}.conf"
upstream ${hull_name} {
server ${IP_ADDRESS}:${PORT} max_fails=0;
}
EOF

# if a specific host is requested, we need to disable the default routing in nginx for that port
if [[ -n "${PUBLISH_HOST:-}" ]]; then
  trace "creating '${HYPERDRIVE_NGINX}/overrides/port-${PUBLISH_PORT}.conf'"
cat << EOF > "${HYPERDRIVE_NGINX}/overrides/port-${PUBLISH_PORT}.conf"
  server {
    listen      ${PUBLISH_PORT};
    server_name "";
    return      444;
  }
EOF
else
  trace "removing '${HYPERDRIVE_NGINX}/overrides/port-${PUBLISH_PORT}.conf'"
  rm -f "${HYPERDRIVE_NGINX}/overrides/port-${PUBLISH_PORT}.conf"
fi

trace "creating '${HYPERDRIVE_NGINX}/hosts/${hull_name}.conf'"
cat << EOF > "${HYPERDRIVE_NGINX}/hosts/${hull_name}.conf"
server {
  server_name "${PUBLISH_HOST:-}";

  listen ${PUBLISH_PORT};

  location / {
    gzip on;
    gzip_types *;
    gzip_proxied any;
    gzip_comp_level 6;

    include cors.conf;

    proxy_set_header X-Forwarded-Host \$host;
    proxy_set_header X-Forwarded-Server \$host;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;

    # forward host header
    proxy_set_header Host \$http_host;

    # WebSocket support (nginx 1.4)
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass http://${hull_name};
  }
}
EOF

fi # hull_exists
