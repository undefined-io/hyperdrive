#!/usr/bin/env bash
### Usage:
###   status [--verbose]
### Options:
###   --help
###   --verbose   list more detailed output

#--HEAD--
# TODO: See if this can be added from a template
set -o nounset; set -o errexit
SCRIPT="$(test -L "$0" && readlink -e "$0" || readlink -e "$0")"
SCRIPT_NAME="$(basename "${SCRIPT}")"
SCRIPT_DIR="$(dirname "${SCRIPT}")"
source "${SCRIPT_DIR}/main.source"
#--/HEAD--

echo "hq   : ${STARPHLEET_HQ:-<not set>}"

while IFS=$'\n' read ROW; do
  read NAME STATE IP <<< "${ROW}"
  
  case "${STATE}" in
    RUNNING)
      echo "lxc  : ${C_GREEN}${NAME}${C_RESET} [${STATE}] (${IP})"
      ;;
    STOPPED)
      echo "lxc  : ${C_RED}${NAME}${C_RESET} [${STATE}] (${IP})"
      ;;
  esac
  case "${NAME}" in
    starphleet|starphleet-basic-hull)
      continue
  esac
  MSG="$(< "${STARPHLEET_LXC_ROOT}/${NAME}/share/.msg")"
  echo "       ${C_DBLACK}- ${MSG}${C_RESET}"
done <<< "$(lxc-ls --fancy --fancy-format name,state,ipv4 "^starphleet" | tail -n +3)"

initctl list | grep -e "^starphleet" | awk '{print "job  :",$0}'

if [[ -n "${STARPHLEET_HQ:-}" ]]; then
  find "${STARPHLEET_HQ_ROOT}" -name "orders" -exec \
    bash -c 'grep -e '^autodeploy' {} | tail -1 | awk '"'"'{print "order:",$2}'"'" \;
fi
