#!/bin/bash

GITUSER=${GITUSER:-git}
GITHOME="/home/$GITUSER"
SELF=`which $0`

case "$1" in
# Public commands

  init) # gitreceive init
    useradd -d $GITHOME $GITUSER || true
    mkdir -p $GITHOME/.ssh
    touch $GITHOME/.ssh/authorized_keys
    cat > $GITHOME/receiver <<"EOF"
#!/bin/bash
sudo starphleet-push-create "${PWD}" "${2}"
EOF
    chmod +x $GITHOME/receiver
    chown -R $GITUSER $GITHOME
    echo "Created receiver script in $GITHOME for user '$GITUSER'."
    ;;

  reset) # gitreceive reset
    rm $GITHOME/.ssh/authorized_keys
    touch $GITHOME/.ssh/authorized_keys
    ;;

  upload-key) # gitreceive upload-key <username>
    KEY=$(cat)
    FINGERPRINT=$(ssh-keygen -lf /dev/stdin <<< $(echo $KEY) | awk '{print $2}')
    AUTHORIZED_KEYS=$GITHOME/.ssh/authorized_keys
    KEY_PREFIX="command=\"$SELF run $2 $FINGERPRINT\",no-agent-forwarding,no-pty,no-user-rc,no-X11-forwarding,no-port-forwarding"
    echo "$KEY_PREFIX $KEY" >> $AUTHORIZED_KEYS
    ;;

# Internal commands
  run)
    export RECEIVE_USER=$2
    export RECEIVE_FINGERPRINT=$3
    eval $(echo $SSH_ORIGINAL_COMMAND | awk '{print "export RECEIVE_REPO="$2}')
    REPO_PATH="$GITHOME/$RECEIVE_REPO"
    if [ ! -d $REPO_PATH ]; then
      mkdir -p $REPO_PATH
      cd $REPO_PATH
      git init --bare > /dev/null
    fi
    cd $GITHOME
    HOOK="$REPO_PATH/hooks/post-receive"
    cat > $HOOK <<EOF
#!/bin/bash
cat | $SELF hook
EOF
    chmod +x $HOOK
    eval "git-shell -c \"$SSH_ORIGINAL_COMMAND\""
    ;;

  hook)
    while read oldrev newrev refname
    do
      git archive $newrev | $GITHOME/receiver "$RECEIVE_REPO" "$newrev" "$RECEIVE_USER" "$RECEIVE_FINGERPRINT"
    done
    ;;

  *)
    echo "Usage: gitreceive <command> [options]"
    ;;
esac
