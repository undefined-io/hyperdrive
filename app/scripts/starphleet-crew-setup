#!/usr/bin/env bash
### Usage:
###    starphleet-crew-setup <order> <service_name> [<crew_id>]
### --help
###
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"
trace "$(basename "$(test -L "$0" && readlink "$0" || echo "$0")") : $*"

set -e

ORDER_DIR="${CURRENT_ORDERS}/${order}"
function sp_status() { echo "${1}" > "${ORDER_DIR}/.starphleetstatus"; }
function cm_status() { echo "${1}" > "${ORDER_DIR}/.starphleetstatus_CM${2}"; }
function write_to_crew_roster() {
cat << EOF > "${STARPHLEET_ROSTER}/${CONTAINER_NAME}"
export CREW_ORDER="${order}"
export CREW_SERVICE_NAME="${service_name}"
EOF
}

ORDER_LOCAL="${ORDER_DIR}/git"
get_CURRENT_SHA "${ORDER_LOCAL}"

ORDER_LOGS="${STARPHLEET_ROOT}/logs/${order}"
[ -d "${ORDER_LOGS}" ] || mkdir -p "${ORDER_LOGS}"

sp_status 'building'
apply_order_exports "${ORDER_DIR}/orders"

# Build a crew member from scratch
get_CONTAINER_NAME "${service_name}" "${crew_id:-1}"
info "Create first crew member (${CONTAINER_NAME})."
starphleet-containerize "${ORDER_LOCAL}#${CURRENT_SHA}" "${CONTAINER_NAME}" "${ORDER_DIR}" | tee "${ORDER_LOGS}/service.log"      
ORIGINAL_CONTAINER_NAME=${CONTAINER_NAME}
cm_status 'built' "${crew_id:-1}"
write_to_crew_roster

# Create crew member clones, ONLY if a specific crew member re-build was not specified using $crew_id
if [[ "${CREW_MEMBERS}" -gt "1" && -z "${crew_id}" ]]; then
  # only build clones if it was requested
  lxc-stop --name ${ORIGINAL_CONTAINER_NAME}
  for (( CREW_NUM = 2; CREW_NUM <= ${CREW_MEMBERS}; CREW_NUM += 1 ))
  do
    get_CONTAINER_NAME "${service_name}" "${CREW_NUM}"
    info "Clone crew member (${CONTAINER_NAME})."
    lxc-clone --snapshot -B overlayfs -o "${ORIGINAL_CONTAINER_NAME}" -n "${CONTAINER_NAME}"
    lxc-start --name ${CONTAINER_NAME} -d
    starphleet-lxc-wait ${CONTAINER_NAME} RUNNING
    lxc-attach --name ${CONTAINER_NAME} -- bash starphleet-wait-network
    lxc-attach --name ${CONTAINER_NAME} -- bash -c 'sed -i -e '/\.orders$/d' /etc/hosts && echo -e "\n127.0.0.1    $(< /etc/hostname)" >> /etc/hosts'
    cm_status 'built' ${CREW_NUM}
    write_to_crew_roster
  done
  lxc-start --name ${ORIGINAL_CONTAINER_NAME} -d
  starphleet-lxc-wait ${ORIGINAL_CONTAINER_NAME} RUNNING
  lxc-attach --name ${ORIGINAL_CONTAINER_NAME} -- bash starphleet-wait-network
fi
sp_status 'built'

