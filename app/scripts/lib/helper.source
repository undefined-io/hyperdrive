# vim: set ft=sh :

function array_contains () { 
# $1 - name of array $2 - value
local array="$1[@]"; local seeking=$2
for element in "${!array}"; do
  if [[ "${element}" == "${seeking}" ]]; then
    return 0
  fi
done
return 1
}

function hull_exists () {
# TODO: change variable case and see if we can use lxc-ls w/o the grep
local container_name="${1}"
if [[ "$(lxc-ls | grep -ce "^${container_name}\$")" == 0 ]]; then
  return 1
else
  return 0
fi
}

function orders_list () {
find "${HYPERDRIVE_HQ_ROOT}" -mindepth 2 -maxdepth 2 -type f -iname "orders" -printf "%p\n";
}

function local_order_repos () {
find "${HYPERDRIVE_ORDER_REPOS}" -mindepth 1 -maxdepth 1 -type d -printf "%p\n";
}

function stale_order_repos () {
local ACTIVE_ORDERS="$(orders_list | orderFromHqPath.awk)"
local ORDER_REPOS="$(local_order_repos | orderFromRepoPath.awk)"

grep -Fvxf <(echo -n "${ACTIVE_ORDERS}") <(echo -n "${ORDER_REPOS}")
}

function ship_ip () {
local HULL_NAME="${1}"
lxc-ls --fancy --fancy-format ipv4 "^${HULL_NAME}\$" | lxcLsIp.awk
}

function apply_order_exports () {
  local ORDERS="${1}"
  eval $(orderExportStatements.awk "${ORDERS}")
  if [[ -z "${PORT:-}" ]]; then
      fatal "missing 'PORT' for order '${ORDERS}'"
  fi
  export PUBLISH_PORT="${PUBLISH_PORT:-${PORT}}"
}

function set_base_container_name {
if [[ ! -f "${HYPERDRIVE_BASE_HULL_NAME}" ]];
then
  echo -n "hyperdrive-base-$(date +%s)" > "${HYPERDRIVE_BASE_HULL_NAME}"
  info "base hull outdated, new base hull will be '$(<"${HYPERDRIVE_BASE_HULL_NAME}")'"
fi
}

