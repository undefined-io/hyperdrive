#!/usr/bin/env bash
# TODO: tput setaf?
# Library of colorized logging functions

# NOTE: to capture all GIT output, use --progress flag with git
function timestamped () { 
local LABEL="$1"
# TODO: This color stuff can be improved upon
local COLOR="${2}"
local RESET="$(echo -e "\033[0m")"
[[ -n "${LABEL}" ]] && LABEL+=": "
[[ -n "${COLOR}" ]] && COLOR="$(echo -e "\E[${COLOR}m\033[1m")"
sed 's/[\n\r]/\n/g' | sed "s/^/$(date +"%y-%m-%d %H:%M:%S") ${COLOR}${LABEL}/g" | sed "s/$/${RESET}/g" | tee -a "${HYPERDRIVE_LOG_ROOT:-/var/log/hyperdrive}/main.log"; 
}

function fatal() { echo -e "$*" | timestamped "${SCRIPT_NAME}" 31; exit 255; }
function error() { echo -e "$*" | timestamped "${SCRIPT_NAME}" 31; }
function warn() { echo -e "$*" | timestamped "${SCRIPT_NAME}" 33; }
function announce() { echo -e "$*" | timestamped "${SCRIPT_NAME}" 34; }
function info() { echo -e "$*" | timestamped "${SCRIPT_NAME}" 32; }
function trace() { [[ "${HYPERDRIVE_DEBUG}" == "true" ]] && echo -e "$*" | timestamped "${SCRIPT_NAME}" 30; }
function log() { echo -e "$*" | timestamped "${SCRIPT_NAME}"; }
function code() { echo -e "CODE $*"; exit $*; }
