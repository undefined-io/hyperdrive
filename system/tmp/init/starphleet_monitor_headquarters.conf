description "Starphleet monitor for the headquarters repository"

start on started starphleet and started starphleet_logstream
stop on stopping starphleet

respawn

script
  source `which tools`
  #initial run of ship scripts, makes sure they are run at least onces
  run_ship_scripts
  while [ 1 ]
  do
    sleep "${STARPHLEET_PULSE}"
    starphleet-public-keys
    if [ -s "${HEADQUARTERS_SOURCE}" ]; then
      #pull down the actual headquarters changes
      if starphleet-git-synch "${HEADQUARTERS_REMOTE}" "${HEADQUARTERS_LOCAL}"; then
        starphleet-public-keys
        starphleet-jobs "${HEADQUARTERS_LOCAL}/jobs" | sudo -u ${ADMIRAL} crontab
      fi
      cd "${HEADQUARTERS_LOCAL}"
      #ship's network information in the headquarters for
      #DNS entries as well as to know where to ssh
      SHIP_INFO="${SHIPS}/${SHIP}"
      [ -d "${SHIPS}" ] || mkdir -p "${SHIPS}"
      git config user.name "${SHIP} autopilot"
      git config user.email "autopilot@${SHIP}"
      git config push.default matching
      starphleet-addresses > "${SHIP_INFO}"
      git add "${SHIP_INFO}"
      git commit -m "${SHIP} config" > /dev/null
      #from the local current branch..
      LOCAL_BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
      #to the remote branch...
      REMOTE_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
      #to the push back location, do we have any differences?
      if starphleet-git rev-list --left-right ${REMOTE_BRANCH}...${LOCAL_BRANCH} | grep '^>' > /dev/null; then
        #now go to the headquarters and push up any local commited changes
        PRIVATE_KEY_COUNT=$(find /var/starphleet/private_keys -type f | wc -l)
        if [ ${PRIVATE_KEY_COUNT} != "0" ]; then
          info pushing local changes
          starphleet-git push --verbose
        fi
        #and run any ship specific scripts if the address changes
        run_ship_scripts
      fi
    else
      warn "**"
      warn You have no headquarters, add one with
      warn starphleet-headquarters giturl
      warn "**"
    fi
  done
end script
