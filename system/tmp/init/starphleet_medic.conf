# vi: set ft=upstart ts=2 et sw=2 sts=2 :
description "Responsible for resuscitating crew members who have been injured by exceeding their respawn limits"

task

start on stopping starphleet_serve_order_to_crew PROCESS=respawn

instance "${INSTANCE}"

script
  if [[ "${JOB}" == "starphleet_serve_order_to_crew" && "${PROCESS}" == "respawn" && -n "${INSTANCE}" ]]; then
    source `which tools`
    # $INSTANCE eg. 745e44ae8bcf3707ecc8cfcc83004856a70be9ca_CM1.orders

    # Trim off .orders
    CREW_ID=${INSTANCE%%.orders}
    # Trim off anything before and including _CM
    CREW_ID=${CREW_ID##*_CM}

    info "resuscitating crew member ${CREW_ID} assigned to container ${INSTANCE}"
    starphleet-lxc-destroy "${INSTANCE}"

    # Pull in orders and service_name from roster for this instance
    apply_crew_roster_exports "${INSTANCE}"
    
    # Re-build the specific crew member
    trace "starphleet-crew-setup \"${CREW_ORDER}\" \"${CREW_SERVICE_NAME}\" \"${CREW_ID}\""
    starphleet-crew-setup "${CREW_ORDER}" "${CREW_SERVICE_NAME}" "${CREW_ID}"

    # Assign new work to the crew member
    STATUS_FILE="${CURRENT_ORDERS}/${CREW_ORDER}/.starphleetstatus_CM${CREW_ID}"
    trace "start starphleet_serve_order_to_crew name=\"${INSTANCE}\" service_name=\"${CREW_SERVICE_NAME}\" status_file=\"${STATUS_FILE}\""
    start starphleet_serve_order_to_crew name="${INSTANCE}" service_name="${CREW_SERVICE_NAME}" status_file="${STATUS_FILE}"

    # Get the crew member back to work
    trace "starphleet-crew-start-shift \"${CREW_ORDER}\" \"${CREW_SERVICE_NAME}\""
    starphleet-crew-start-shift "${CREW_ORDER}" "${CREW_SERVICE_NAME}"
  fi
end script
