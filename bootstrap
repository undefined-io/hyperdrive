#!/usr/bin/env bash
if [[ "$(id -u)" -ne "0" ]]; then echo "you must be root to run this this script"; exit 1; fi

function log() {
echo "$(date +"%y-%m-%d %H:%M:%S") : ${1}"
}

export HYPERDRIVE_ROOT="${1:-/var/hyperdrive}"
export HYPERDRIVE_DATA_ROOT="${2:-/data/hyperdrive}"
export HYPERDRIVE_GIT="${3:-https://github.com/undefined-io/hyperdrive}"
export HYPERDRIVE_BRANCH="${4:-master}"
export HYPERDRIVE_LOCAL="${HYPERDRIVE_DATA_ROOT}/git"
export HYPERDRIVE_CONFIG_ROOT="/etc/hyperdrive"
export HYPERDRIVE_LOG_ROOT="/var/log/hyperdrive"
export HYPERDRIVE_BOOTSTRAP_LOG="${HYPERDRIVE_DATA_ROOT}/bootstrap.log"

mkdir -p "${HYPERDRIVE_DATA_ROOT}"
mkdir -p "${HYPERDRIVE_CONFIG_ROOT}"

# set timezone to GMT
echo "GMT" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata

# make sure localhost is in the hostfile (this is for lxc start time improvements)
if egrep -e '^[^#][[:space:]]*([0-9]{1,3}[.]){3}[0-9]{1,3}[[:space:]]*localhost.*$' /etc/hosts > /dev/null 2>&1; then
  echo "127.0.0.1 localhost" >> /etc/hosts
fi

mkdir -p "${HYPERDRIVE_LOG_ROOT}"
# install and update packages before installing hyperdrive
log "updating apt-get repositories..."
apt-get update -y > "${HYPERDRIVE_BOOTSTRAP_LOG}" 2>&1
log "upgrading apt-get packages..."
apt-get upgrade -y >> "${HYPERDRIVE_BOOTSTRAP_LOG}" 2>&1
log "installing minimum hyperdrive required packages..."
apt-get install -y git >> "${HYPERDRIVE_BOOTSTRAP_LOG}" 2>&1

# create initial hyperdrive config file
cat << EOF > "${HYPERDRIVE_CONFIG_ROOT}/main.conf"
export HYPERDRIVE_ROOT="${HYPERDRIVE_ROOT}"
export HYPERDRIVE_DATA_ROOT="${HYPERDRIVE_DATA_ROOT}"
export HYPERDRIVE_REMOTE="${HYPERDRIVE_GIT}#${HYPERDRIVE_BRANCH}"
export HYPERDRIVE_LOG_ROOT="${HYPERDRIVE_LOG_ROOT}"
:
EOF

rm -rf "${HYPERDRIVE_LOCAL}"
log "cloning hyperdrive repository..."
git clone --branch "${HYPERDRIVE_BRANCH}" --depth 1 "${HYPERDRIVE_GIT}" "${HYPERDRIVE_LOCAL}" >> "${HYPERDRIVE_BOOTSTRAP_LOG}" 2>&1

log "installing hyperdrive..."
"${HYPERDRIVE_LOCAL}/app/scripts/install" 2>&1 | tee -a "${HYPERDRIVE_BOOTSTRAP_LOG}"
